// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Articulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("SubCategoriaId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TiendaId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoriaId");

                    b.HasIndex("TiendaId");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("Domain.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Domain.Empleado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Apellido")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Cargo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CodigoId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<bool>("EsPlanilla")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaNaciemiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Empleados");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8373973-7f7e-4dc9-915b-f27c377bbfac"),
                            Apellido = "Perez",
                            Cargo = "Jefe",
                            CodigoId = "000",
                            Edad = 29,
                            EsPlanilla = true,
                            FechaNaciemiento = new DateTime(2020, 10, 12, 11, 28, 1, 907, DateTimeKind.Local).AddTicks(425),
                            Nombre = "Juan"
                        },
                        new
                        {
                            Id = new Guid("2588f7c3-9811-4830-a945-7c8b3ed966fe"),
                            Apellido = "Cueva",
                            Cargo = "Gerente",
                            CodigoId = "000",
                            Edad = 45,
                            EsPlanilla = true,
                            FechaNaciemiento = new DateTime(2020, 8, 12, 11, 28, 1, 908, DateTimeKind.Local).AddTicks(5076),
                            Nombre = "Cesar"
                        },
                        new
                        {
                            Id = new Guid("cb09068b-425e-412d-80fe-8e8e81a85a8a"),
                            Apellido = "Mercedez",
                            Cargo = "Gerente",
                            CodigoId = "000",
                            Edad = 45,
                            EsPlanilla = false,
                            FechaNaciemiento = new DateTime(2020, 7, 12, 11, 28, 1, 908, DateTimeKind.Local).AddTicks(5135),
                            Nombre = "Maria"
                        });
                });

            modelBuilder.Entity("Domain.SubCategoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("SubCategoria");
                });

            modelBuilder.Entity("Domain.Tienda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Logo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("PosicionX")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PosicionY")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Tiendas");
                });

            modelBuilder.Entity("Domain.Articulo", b =>
                {
                    b.HasOne("Domain.SubCategoria", "SubCategoria")
                        .WithMany("Articulo")
                        .HasForeignKey("SubCategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Tienda", "Tienda")
                        .WithMany("Articulo")
                        .HasForeignKey("TiendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.SubCategoria", b =>
                {
                    b.HasOne("Domain.Categoria", "Categoria")
                        .WithMany("SubCategoria")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
